<%def name="html_head()">
    <meta charset="utf-8">
    <title>${title}</title>
    <meta name="author" content="${blog_author}">
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <link rel="stylesheet" href="/assets/external/reveal.js/css/reveal.min.css">
    <link rel="stylesheet" href="/assets/external/reveal.js/css/theme/default.css" id="theme">
    <!-- For syntax highlighting -->
    <link rel="stylesheet" href="/assets/external/reveal.js/lib/css/zenburn.css">

    <!-- If the query includes 'print-pdf', use the PDF print sheet -->
    <script>
        document.write( '<link rel="stylesheet" href="/assets/external/reveal.js/css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );
    </script>

    <!--[if lt IE 9]>
    <script src="/assets/external/reveal.js/lib/js/html5shiv.js"></script>
    <![endif]-->
    <style type="text/css">
        .bottom-sticky {
            position: fixed;
            right: 0;
            bottom: 0;
            font-family: "Lato", sans-serif;
            font-size: 36px;
            color: white;
        }
    </style>
</%def>
<%def name="reveal_settings()">
    Reveal.initialize({
        controls: true,
        progress: true,
        history: true,
        center: false,

        theme: Reveal.getQueryHash().theme || 'default', // available themes are in /css/theme
        transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

        // Optional libraries used to extend on reveal.js
        dependencies: [
            { src: '/assets/external/reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
            { src: '/assets/external/reveal.js/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
            { src: '/assets/external/reveal.js/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
             { src: '/assets/external/reveal.js/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
             { src: '/assets/external/reveal.js/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
             { src: '/assets/external/reveal.js/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
            // { src: '/assets/external/reveal.js/plugin/search/search.js', async: true, condition: function() { return !!document.body.classList; } }
            // { src: '/assets/external/reveal.js/plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
        ]
    });
</%def>
